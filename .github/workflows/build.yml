name: Docker Build

on:
    schedule:
        -   cron: 0 0 * * *
    push:
        branches: master
        tags:
            - v*

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php_version: [ 7.2.34, 7.3.24, 7.4.12, latest ]

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -   name: Login to DockerHub
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Get the version
                id: get_version
                run: |
                    VERSION=${{ matrix.php_version }}
                    PREFIX=edge
                    SUFFIX="-alpine"

                    if [[ $VERSION == "latest" ]]; then
                        SUFFIX=""
                    fi

                    if [[ $GITHUB_REF == refs/tags/* ]]; then
                        PREFIX=latest
                    fi

                    echo ::set-output name=prefix::${PREFIX}
                    echo ::set-output name=suffix::${SUFFIX}
                    echo ::set-output name=minor_version::${VERSION:0:3}
                    echo ::set-output name=full_version::${VERSION}

            -   name: Prepare
                id: prepare
                env:
                    MINOR_PHP_VERSION: ${{ steps.get_version.outputs.minor_version }}
                    FULL_PHP_VERSION: ${{ steps.get_version.outputs.full_version }}
                run: |
                    DOCKER_IMAGE=helldar/laravel-gitlab-ci

                    MINOR_VERSION=${MINOR_PHP_VERSION}
                    PATCH_VERSION=${FULL_PHP_VERSION}

                    echo ::set-output name=docker_image::${DOCKER_IMAGE}
                    echo ::set-output name=minor_version::${MINOR_VERSION}
                    echo ::set-output name=patch_version::${PATCH_VERSION}

            -   name: Build and Push (latest)
                if: success() && matrix.php_version == 'latest'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    tags: ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}
                    build-args: |
                        VERSION=${{ steps.get_version.outputs.prefix }}
                        MINOR_PHP_VERSION=alpine
                        FULL_PHP_VERSION=alpine
                        BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
                        VCS_REF=${GITHUB_SHA::8}

            -   name: Build and Push (minor)
                if: success() && matrix.php_version != 'latest'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    tags: ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}-${{ steps.prepare.outputs.minor_version }}
                    build-args: |
                        VERSION=${{ steps.get_version.outputs.prefix }}-${{ steps.prepare.outputs.minor_version }}
                        MINOR_PHP_VERSION=${{ steps.prepare.outputs.minor_version }}
                        FULL_PHP_VERSION=${{ steps.prepare.outputs.minor_version }}${{ steps.get_version.outputs.suffix }}
                        BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
                        VCS_REF=${GITHUB_SHA::8}

            -   name: Build and Push (patch)
                if: success() && matrix.php_version != 'latest'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    tags: ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}-${{ steps.prepare.outputs.patch_version }}
                    build-args: |
                        VERSION=${{ steps.get_version.outputs.prefix }}-${{ steps.prepare.outputs.patch_version }}
                        MINOR_PHP_VERSION=${{ steps.prepare.outputs.patch_version }}
                        FULL_PHP_VERSION=${{ steps.prepare.outputs.patch_version }}${{ steps.get_version.outputs.suffix }}
                        BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
                        VCS_REF=${GITHUB_SHA::8}

            -   name: Inspect (latest)
                if: success() && matrix.php_version == 'latest'
                run: docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}

            -   name: Inspect (minor)
                if: success() && matrix.php_version != 'latest'
                run: docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}-${{ steps.prepare.outputs.minor_version }}

            -   name: Inspect (patch)
                if: success() && matrix.php_version != 'latest'
                run: docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}-${{ steps.prepare.outputs.patch_version }}
